---
import { Image } from 'astro:assets';
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import { fetchFromStrapi, renderImageUrl } from '@/lib/strapi';
import type { Product } from '@/interfaces/product';
import { ProductDetailsActions } from '@/components/ProductDetailsActions';

const { productId } = Astro.params;

const product = await fetchFromStrapi<Product<'Nome' | 'Descricao' | 'Foto' | 'Preco'>>({
  endpoint: 'produtos',
  wrappedByKey: 'data',
  wrappedByList: true,
  query: {
    populate: 'Foto',
    'filters[slug][$eq]': productId as string,
  }
});

const moneyFormatter = new Intl.NumberFormat('pt-BR', {
  style: 'currency',
  currency: 'BRL',
});
---

<Layout title={product.attributes.Nome}>
  <div class="relative">
    <div class="relative w-full h-24">
      <Image
        src="/home-bg.jpeg"
        alt="Hero"
        width={1125}
        height={750}
        class="w-full h-24 absolute object-cover"
      />
      <div class="w-full h-24 absolute bg-black bg-opacity-65"></div>
    </div>
    <Header className="py-0 h-24" />
  </div>
  <nav class="bg-gray-100 py-12 px-6 text-center">
    <h1 class="font-serif text-3xl uppercase tracking-bigger font-normal leading-relaxed text-tiny-black">
      { product.attributes.Nome }
    </h1>
    <div class="text-xs flex items-center gap-1 justify-center mt-4 uppercase text-small-gray tracking-wider">
      <a href="/catalogo" class="text-black font-bold hover:underline underline-offset-2">
        Cat√°logo
      </a>
      <span>/</span>
      <p>
        { product.attributes.Nome }
      </p>
    </div>
  </nav>
  <main class="flex flex-col lg:grid lg:grid-cols-5 pb-20 lg:py-20 lg:px-20">
    <Image
      src={renderImageUrl(product.attributes.Foto.data.attributes.formats.medium.url)}
      alt={product.attributes.Nome}
      width={product.attributes.Foto.data.attributes.formats.medium.width}
      height={product.attributes.Foto.data.attributes.formats.medium.height}
      class="object-cover w-full h-80 lg:col-start-1 lg:col-end-3"
    />
    <div class="px-5 mt-5 flex flex-col lg:mt-0 lg:col-start-3 lg:col-end-6">
      <h1 class="hidden lg:block text-2xl uppercase font-serif text-tiny-black mb-3">
        { product.attributes.Nome }
      </h1>
      <p class="font-serif font-light text-2xl mb-2 lg:mb-4">
        { moneyFormatter.format(product.attributes.Preco) }
      </p>
      <p class="text-tiny-black text-base font-light leading-7 self-start mb-5 lg:mb-auto">
        { product.attributes.Descricao }
      </p>

      <ProductDetailsActions client:load product={product} />
    </div>
  </main>
</Layout>